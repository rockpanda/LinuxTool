#!/bin/bash
#通过openssl自制私有ssl证书
#By balladpanda<balladpanda@gmail.com>
#Time 2021年12月14日

echo -n '请输入需要ssl证书的域名：'
read subdomain

#创建存放目录
mkdir -p ca  server

#1.生成证书颁发机构证书
#生成 CA 证书私钥
echo -e "\033[31m[Task:生成 CA 证书私钥]\033[0m"

openssl genrsa -out ./ca/ca.key 4096 >/dev/null 2>&1

#生成 CA 证书
# 国家代码，省份，城市，组织名称，常用名称，邮箱地址
echo -e "\033[31m[Task:生成 CA 证书]\033[0m"

openssl req -x509 -new -nodes -sha512 -days 3650 \
 -subj "/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=$subdomain" \
 -key ./ca/ca.key \
 -out ./ca/ca.crt >/dev/null 2>&1

#2.生成服务器证书
#证书通常包含一个.crt文件和一个.key文件，例如，yourdomain.com.crt和yourdomain.com.key.

#1、生成私钥。
echo -e "\033[31m[Task:生成服务器私钥]\033[0m"

openssl genrsa -out ./server/$subdomain.key 4096 >/dev/null 2>&1

#2、生成证书签名请求 (CSR)
echo -e "\033[31m[Task:生成证书签名]\033[0m"

openssl req -sha512 -new \
   -subj "/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=$subdomain" \
   -key ./server/$subdomain.key \
   -out ./server/$subdomain.csr >/dev/null 2>&1
#3、生成 x509 v3 扩展文件
echo -e "\033[31m[Task:生成 x509 v3 扩展文件]\033[0m"

cat > v3.ext <<-EOF
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[alt_names]
DNS.1=$subdomain
EOF

#4、使用该v3.ext文件为您的主机生成证书
echo -e "\033[31m[Task:使用扩展文件生成主机证书]\033[0m"

openssl x509 -req -sha512 -days 3650 \
    -extfile v3.ext \
    -CA ./ca/ca.crt -CAkey /ca/ca.key -CAcreateserial \
    -in ./server/$subdomain.csr \
    -out ./server/$subdomain.crt >/dev/null 2>&1 
#转化证书
openssl x509 -inform PEM -in ./server/$subdomain.crt -out ./server/$subdomain.cert >/dev/null 2>&1

echo -e "\033[31m[Task:创建完成]\033[0m"

